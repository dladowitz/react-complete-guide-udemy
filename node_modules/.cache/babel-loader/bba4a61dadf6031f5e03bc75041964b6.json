{"ast":null,"code":"var _jsxFileName = \"/Users/davidladowitz/Dropbox/My Mac (David-C02CN472MD6R)/Documents/repos/udemy/react-complete-guide/src/components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport Card from \"../UI/Card\";\nimport \"./Expenses.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Expenses(props) {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\n  console.log(\"filteredYear: \", filteredYear);\n  const expenses = props.expenses.filter(expense => {\n    console.log(expense.date.getYear());\n    expense.date.getYear() === filteredYear;\n  });\n  console.log(\"filtered expenses: \", expenses);\n\n  const filterChangeHandler = event => {\n    setFilteredYear(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      onFilterChange: filterChangeHandler,\n      filteredYear: filteredYear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), expenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      date: expense.date,\n      title: expense.title,\n      amount: expense.amount\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Expenses, \"mdIsaHWtxuZbTDv6nUGN/ApvXr0=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/Users/davidladowitz/Dropbox/My Mac (David-C02CN472MD6R)/Documents/repos/udemy/react-complete-guide/src/components/Expenses/Expenses.js"],"names":["React","useState","ExpenseItem","ExpensesFilter","Card","Expenses","props","filteredYear","setFilteredYear","console","log","expenses","filter","expense","date","getYear","filterChangeHandler","event","target","value","map","title","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,IAAP,MAAiB,YAAjB;AAEA,OAAO,gBAAP;;;AAGA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BH,YAA9B;AAEA,QAAMI,QAAQ,GAAGL,KAAK,CAACK,QAAN,CAAeC,MAAf,CAAsBC,OAAO,IAAI;AAChDJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,OAAO,CAACC,IAAR,CAAaC,OAAb,EAAZ;AACAF,IAAAA,OAAO,CAACC,IAAR,CAAaC,OAAb,OAA2BR,YAA3B;AACD,GAHgB,CAAjB;AAKAE,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCC,QAAnC;;AAEA,QAAMK,mBAAmB,GAAIC,KAAD,IAAW;AACrCT,IAAAA,eAAe,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACD,GAFD;;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA,4BACE,QAAC,cAAD;AAAgB,MAAA,cAAc,EAAEH,mBAAhC;AAAqD,MAAA,YAAY,EAAET;AAAnE;AAAA;AAAA;AAAA;AAAA,YADF,EAGGI,QAAQ,CAACS,GAAT,CAAcP,OAAD,iBACZ,QAAC,WAAD;AAEE,MAAA,IAAI,EAAEA,OAAO,CAACC,IAFhB;AAGE,MAAA,KAAK,EAAED,OAAO,CAACQ,KAHjB;AAIE,MAAA,MAAM,EAAER,OAAO,CAACS;AAJlB,OACOT,OAAO,CAACU,EADf;AAAA;AAAA;AAAA;AAAA,YADD,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GA7BQlB,Q;;KAAAA,Q;AA+BT,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport ExpenseItem from \"./ExpenseItem\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport Card from \"../UI/Card\";\n\nimport \"./Expenses.css\";\n\n\nfunction Expenses(props) {\n  const [filteredYear, setFilteredYear] = useState(\"2021\")\n  console.log(\"filteredYear: \", filteredYear);\n\n  const expenses = props.expenses.filter(expense => {\n    console.log(expense.date.getYear())\n    expense.date.getYear() === filteredYear;\n  });\n\n  console.log(\"filtered expenses: \", expenses);\n\n  const filterChangeHandler = (event) => {\n    setFilteredYear(event.target.value);\n  };\n\n  return (\n    <Card className=\"expenses\">\n      <ExpensesFilter onFilterChange={filterChangeHandler} filteredYear={filteredYear} />\n      \n      {expenses.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          date={expense.date}\n          title={expense.title}\n          amount={expense.amount}\n        />\n      ))}\n    </Card>\n  );\n}\n\nexport default Expenses;\n"]},"metadata":{},"sourceType":"module"}